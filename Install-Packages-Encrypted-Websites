https://httpd.apache.org/docs/current/ssl/
https://httpd.apache.org/docs/current/mod/mod_ssl.html

# man openssl
# sudo cp default-ssl.conf secure.localnet.conf
# sudo nano secure.localnet.conf  
VirtualHost *:443>
        ServerAdmin webmaster@localhost
        ServerName secure.localnet.com          
        DocumentRoot /var/www/html/secure

        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        #LogLevel info ssl:warn

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with "a2disconf".
        #Include conf-available/serve-cgi-bin.conf

        #   SSL Engine Switch:
        #   Enable/Disable SSL for this virtual host.
        SSLEngine on

        #   A self-signed (snakeoil) certificate can be created by installing
        #   the ssl-cert package. See
        #   /usr/share/doc/apache2/README.Debian.gz for more info.
                #   If both key and certificate are stored in the same file, only the
        #   SSLCertificateFile directive is needed.
#       SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
#       SSLCertificateKeyFile   /etc/ssl/private/ssl-cert-snakeoil.key
        SSLCertificateFile      /etc/apache2/ssl/secure.localnet.com.crt
        SSLCertificateKeyFile   /etc/apache2/ssl/secure.localnet.com.key
        #   Server Certificate Chain:
        #   Point SSLCertificateChainFile at a file containing the
        #   concatenation of PEM encoded CA certificates which form the
        #   certificate chain for the server certificate. Alternatively
        #   the referenced file can be the same as SSLCertificateFile
        #   when the CA certificates are directly appended to the server
        #   certificate for convinience.
        #SSLCertificateChainFile /etc/apache2/ssl.crt/server-ca.crt

        #   Certificate Authority (CA):
        #   Set the CA certificate verification path where to find CA
        #   certificates for client authentication or alternatively one
        #   huge file containing all of them (file must be PEM encoded)
        #   Note: Inside SSLCACertificatePath you need hash symlinks
        #         to point to the certificate files. Use the provided
        #         Makefile to update the hash symlinks after changes.
        #SSLCACertificatePath /etc/ssl/certs/
        #SSLCACertificateFile /etc/apache2/ssl.crt/ca-bundle.crt
        
                #   Certificate Revocation Lists (CRL):
        #   Set the CA revocation path where to find CA CRLs for client
        #   authentication or alternatively one huge file containing all
        #   of them (file must be PEM encoded)
        #   Note: Inside SSLCARevocationPath you need hash symlinks
        #         to point to the certificate files. Use the provided
        #         Makefile to update the hash symlinks after changes.
        #SSLCARevocationPath /etc/apache2/ssl.crl/
        #SSLCARevocationFile /etc/apache2/ssl.crl/ca-bundle.crl

        #   Client Authentication (Type):
        #   Client certificate verification type and depth.  Types are
        #   none, optional, require and optional_no_ca.  Depth is a
        #   number which specifies how deeply to verify the certificate
        #   issuer chain before deciding the certificate is not valid.
        #SSLVerifyClient require
        #SSLVerifyDepth  10

        #   SSL Engine Options:
        #   Set various options for the SSL engine.
        #   o FakeBasicAuth:
        #    Translate the client X.509 into a Basic Authorisation.  This means >
        #    the standard Auth/DBMAuth methods can be used for access control. 
        #    Translate the client X.509 into a Basic Authorisation.  This means that
        #    the standard Auth/DBMAuth methods can be used for access control.  The
        #    user name is the `one line' version of the client's X.509 certificate.
        #    Note that no password is obtained from the user. Every entry in the user
        #    file needs this password: `xxj31ZMTZzkVA'.
        #   o ExportCertData:
        #    This exports two additional environment variables: SSL_CLIENT_CERT and
        #    SSL_SERVER_CERT. These contain the PEM-encoded certificates of the
        #    server (always existing) and the client (only existing when client
        #    authentication is used). This can be used to import the certificates
        #    into CGI scripts.
        #   o StdEnvVars:
        #    This exports the standard SSL/TLS related `SSL_*' environment variables.
        #    Per default this exportation is switched off for performance reasons,
        #    because the extraction step is an expensive operation and is usually
        #    useless for serving static content. So one usually enables the
        #    exportation for CGI and SSI requests only.
        #   o OptRenegotiate:
        #    This enables optimized SSL connection renegotiation handling when SSL
        #    directives are used in per-directory context.
        #SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire
        <FilesMatch "\.(?:cgi|shtml|phtml|php)$">
                SSLOptions +StdEnvVars
        </FilesMatch>
        <Directory /usr/lib/cgi-bin>
                SSLOptions +StdEnvVars
        </Directory>

        #   SSL Protocol Adjustments:
        #   The safe and default but still SSL/TLS standard compliant shutdown
        #   approach is that mod_ssl sends the close notify alert but doesn't wait for
        #   the close notify alert from client. When you need a different shutdown
        #   approach you can use one of the following variables:
        #   o ssl-unclean-shutdown:
        #    This forces an unclean shutdown when the connection is closed, i.e. no
        #    SSL close notify alert is send or allowed to received.  This violates
        #    the SSL/TLS standard but is needed for some brain-dead browsers. Use
        #    this when you receive I/O errors because of the standard approach where
        #    mod_ssl sends the close notify alert.
        #   o ssl-accurate-shutdown:
        #    This forces an accurate shutdown when the connection is closed, i.e. a
        #    SSL close notify alert is send and mod_ssl waits for the close notify
        #    alert of the client. This is 100% SSL/TLS standard compliant, but in
        #    practice often causes hanging connections with brain-dead browsers. Use
        #    this only for browsers where you know that their SSL implementation
        #    works correctly.
        #   Notice: Most problems of broken clients are also related to the HTTP
        #   keep-alive facility, so you usually additionally want to disable
        #   keep-alive for those clients, too. Use variable "nokeepalive" for this.
        #   Similarly, one has to force some clients to use HTTP/1.0 to workaround
        #   their broken HTTP/1.1 implementation. Use variables "downgrade-1.0" and
        #   "force-response-1.0" for this.
        # BrowserMatch "MSIE [2-6]" \
        #       nokeepalive ssl-unclean-shutdown \
        #       downgrade-1.0 force-response-1.0
</VirtualHost>

  

    # Generate Private Key:
  └─$ sudo openssl genpkey -algorithm rsa -pkeyopt rsa_keygen_bits:2048 -out secure.localnet.com.key
    # Generate CSR:
    $ sudo openssl req -new -key secure.localnet.com.key -out secure.localnet.com.csr  
    
            You are about to be asked to enter information that will be incorporated
      into your certificate request.
      What you are about to enter is what is called a Distinguished Name or a DN.
      There are quite a few fields but you can leave some blank
      For some fields there will be a default value,
      If you enter '.', the field will be left blank.
      -----
      Country Name (2 letter code) [AU]:SA
      State or Province Name (full name) [Some-State]:WC
      Locality Name (eg, city) []:Cape Town
      Organization Name (eg, company) [Internet Widgits Pty Ltd]:localnet
      Organizational Unit Name (eg, section) []:localnet
      Common Name (e.g. server FQDN or YOUR name) []:secure.localnet.com
      Email Address []:info@secure.localnet.com

      Please enter the following 'extra' attributes
      to be sent with your certificate request
      A challenge password []:
      An optional company name []:

     



# standard commands, cypher commands, message digest commands:


└─$ openssl list -standard-commands
Standard commands
asn1parse         ca                ciphers           cmp               
cms               crl               crl2pkcs7         dgst              
dhparam           dsa               dsaparam          ec                
ecparam           enc               engine            errstr            
fipsinstall       gendsa            genpkey           genrsa            
help              info              kdf               list              
mac               nseq              ocsp              passwd            
pkcs12            pkcs7             pkcs8             pkey              
pkeyparam         pkeyutl           prime             rand              
rehash            req               rsa               rsautl            
s_client          s_server          s_time            sess_id           
smime             speed             spkac             srp               
storeutl          ts                verify            version           
x509              

┌──(nashtech㉿kalihost1)-[~]
└─$ openssl list -digest-commands
Message Digest commands (see the `dgst' command for more details)
blake2b512        blake2s256        md4               md5               
rmd160            sha1              sha224            sha256            
sha3-224          sha3-256          sha3-384          sha3-512          
sha384            sha512            sha512-224        sha512-256        
shake128          shake256          sm3               

┌──(nashtech㉿kalihost1)-[~]
└─$ openssl list -cipher-commands 
Cipher commands (see the `enc' command for more details)
aes-128-cbc       aes-128-ecb       aes-192-cbc       aes-192-ecb       
aes-256-cbc       aes-256-ecb       aria-128-cbc      aria-128-cfb      
aria-128-cfb1     aria-128-cfb8     aria-128-ctr      aria-128-ecb      
aria-128-ofb      aria-192-cbc      aria-192-cfb      aria-192-cfb1     
aria-192-cfb8     aria-192-ctr      aria-192-ecb      aria-192-ofb      
aria-256-cbc      aria-256-cfb      aria-256-cfb1     aria-256-cfb8     
aria-256-ctr      aria-256-ecb      aria-256-ofb      base64            
bf                bf-cbc            bf-cfb            bf-ecb            
bf-ofb            camellia-128-cbc  camellia-128-ecb  camellia-192-cbc  
camellia-192-ecb  camellia-256-cbc  camellia-256-ecb  cast              
cast-cbc          cast5-cbc         cast5-cfb         cast5-ecb         
cast5-ofb         des               des-cbc           des-cfb           
des-ecb           des-ede           des-ede-cbc       des-ede-cfb       
des-ede-ofb       des-ede3          des-ede3-cbc      des-ede3-cfb      
des-ede3-ofb      des-ofb           des3              desx              
rc2               rc2-40-cbc        rc2-64-cbc        rc2-cbc           
rc2-cfb           rc2-ecb           rc2-ofb           rc4               
rc4-40            seed              seed-cbc          seed-cfb          
seed-ecb          seed-ofb          sm4-cbc           sm4-cfb           
sm4-ctr           sm4-ecb           sm4-ofb

──(nashtech㉿kalihost1)-[~]
└─$ openssl genpkey -help
Usage: genpkey [options]

General options:
 -help               Display this summary
 -engine val         Use engine, possibly a hardware device
 -paramfile infile   Parameters file
 -algorithm val      The public key algorithm
 -quiet              Do not output status while generating keys
 -pkeyopt val        Set the public key algorithm option as opt:value
 -config infile      Load a configuration file (this may load modules)

Output options:
 -out outfile        Output file
 -outform PEM|DER    output format (DER or PEM)
 -pass val           Output file pass phrase source
 -genparam           Generate parameters, not key
 -text               Print the in text
 -*                  Cipher to use to encrypt the key

Provider options:
 -provider-path val  Provider load path (must be before 'provider' argument if required)
 -provider val       Provider to load (can be specified multiple times)
 -propquery val      Property query used when fetching algorithms
Order of options may be important!  See the documentation.


# sudo a2enmod ssl 
# openssl version  
# sudo systemctl restart apache2
 - less /etc/apache2/mods-enable/ssl.conf
 
# apachectl -M

# sudo gzip -d  /usr/share/doc/apache2/README.Debian.gz

    Contents
    ========

      Apache2 Configuration under Debian GNU/Linux
        Files and Directories in '/etc/apache2'
        Tools

      Using mod_cache_disk

      SSL
        Enabling SSL
        Creating self-signed certificates
        SSL workaround for MSIE

      Suexec

      Documentation

      Upgrades

      Common Problems

      For Developers

    Apache2 Configuration under Debian GNU/Linux
    ============================================

    Debian's default Apache2 installation attempts to make adding and
    removing modules, virtual hosts, and extra configuration directives as
    flexible as possible, in order to make automating the changes and
    administering the server as easy as possible.

    Please be aware that this layout is quite different from the standard
    Apache configuration. Due to the use of environment variables, apache2
    needs to be started/stopped with '/etc/init.d/apache2', apachectl, or
    apache2ctl. Calling '/usr/bin/apache2' directly will not work with the
    default configuration. To call apache2 with specific command line
    arguments, just call apache2ctl with the same arguments.

    Files and Directories in '/etc/apache2':
    ---------------------------------------

    apache2.conf

      This is the main configuration file. It does not include any
      actual configuration we expect to be adapted on your site, so
      where possible please do not touch it. This file is the
      foundation stone of the Apache configuration in Debian and should
      be up to date after upgrades to make sure all configuration pieces
      are properly included.

      If you want to extend the global configuration, you can customize
      the Apache web server by including configuration files through the
      conf-available mechanism. To change listening ports and socket
      configuration use ports.conf (see below).

    ports.conf

      Configuration directives for which ports and IP addresses to
      listen to.

    magic

      Patterns for mod_mime_magic. This is not compatible with the format
      used by current versions of the file/libmagic packages.

    envvars

      This contains environment variables that may be used in the
      configuration. Some settings, like user and pid file, need to
      go in here so that other scripts can use them. It can also
      be used to change some default settings used by apache2ctl,
      including the ulimit value for the maximum number of open files.
      The default LANG=C setting is also here, and can be changed to a
      different language.

    conf-available/

      Files in this directory are included in the global server scope by
      this line in apache2.conf:

      # Include generic snippets of statements
        IncludeOptional conf-enabled/*.conf

      This is a good place to add additional configuration
      directives. All configuration snippets need a '.conf' suffix to be
      included as actual configuration. The local administrator should
      use file names starting with 'local-' to avoid name clashes with
      files installed by packages.

      Configuration snippets can be enabled and disabled by using the
      a2enconf and a2disconf executables. This works similarly to the
      approach used for modules and sites below.

      Configuration snippets can of course also be included in individual
      virtual hosts.

    conf-enabled/

      Like mods-enabled/ and sites-enabled/, a piece of configuration is
      enabled by symlinking a file from conf-available/ into this
      directory. The a2enconf helper is provided to assist this task.

    mods-available/

      This directory contains a series of .load and .conf files.
      The .load files contain the Apache configuration directive
      necessary to load the module in question.  The corresponding
      .conf files contain configuration directives necessary to
      utilize the module in question.

    mods-enabled/

      To actually enable a module for Apache2, it is necessary to
      create a symlink in this directory to the .load (and .conf, if
      it exists) files associated with the module in
      mods-available/.  For example:

      cgi.load -> /etc/apache2/mods-available/cgi.load

      The a2enmod helper can be used to enable a module.

    sites-available/

      Like mods-available/, except that it contains configuration
      directives for different virtual hosts that might be used with
      apache2.  Note that the hostname doesn't have to correspond
      exactly with the filename.  '000-default.conf' is the default
      host which is provided by Debian.

    sites-enabled/

      Similar in functionality to mods-enabled/, sites-enabled
      contains symlinks to sites in sites-available/ that the
      administrator wishes to enable.

      Apache uses the first VirtualHost that matches the IP/Port
      as default for named virtual hosts. Therefore the 'default'
      site should be called '000-default' to make sure it sorts before
      other sites.

      Example:
      dedasys.conf -> /etc/apache2/sites-available/dedasys.conf

      The a2ensite helper can be used to enable a site.

    The Include directives ignore files with names that do not end with a
    .conf suffix. This behavior has changed from previous releases!

    In some cases you may want to enable a specific piece of configuration
    (think of files shipped in conf-available/) for a particular virtual
    host only and not globally as is our default. In such cases you can
    disable the configuration at a global scope for example by doing

      a2disconf some-configuration

    Then it can be included in a particular virtual host within a file in
    sites-enabled/. You may want to add

      Include conf-available/some-configuration.conf

    in that site configuration. However, be careful, as this may not work for
    some configurations, depending on the context and implications of some
    directives.


    Tools
    -----

    a2enmod and a2dismod are available for enabling and disabling modules utilizing
    the above configuration system.

    a2ensite and a2dissite do essentially the same thing as the above tools, but
    for sites rather than modules. Finally a2enconf and a2disconf are the
    corresponding tools for configuration snippets.

    a2query is a helper script providing runtime information about the running
    server instance. For example it can be used to query enabled modules, the
    selected MPM, and other information. This tool is primarily meant for package
    maintainers who need to interact with the Apache packages to activate
    their configurations upon package installation, but it can be used by users
    as well.

    apxs2 -a/-A is modified to use a2enmod to activate newly installed modules.


    Using mod_cache_disk
    ====================

    To ensure that the disk cache does not grow indefinitely, htcacheclean is
    started when mod_cache_disk is enabled. Both daemon and cron (daily) mode
    are supported. The configuration (run mode, cache size, etc.) is in
    '/etc/default/apache-htcacheclean'.

    Normally, htcacheclean is automatically started and stopped by
    '/etc/init.d/apache2'. However, if you change the state of mod_cache_disk or
    the configuration of htcacheclean while apache2 is running, you may need to
    manually start/stop htcacheclean with "/etc/init.d/apache2 start-htcacheclean"
    or "/etc/init.d/apache2 stop-htcacheclean".

    Note that mod_cache_disk was named mod_disk_cache in versions 2.2 and earlier.


    SSL
    ===

    Enabling SSL
    ------------

    To enable SSL, type (as user root):

      a2ensite default-ssl
      a2enmod ssl

    If you want to use self-signed certificates, you should install the ssl-cert
    package (see below). Otherwise, just adjust the SSLCertificateKeyFile and
    SSLCertificateFile directives in '/etc/apache2/sites-available/default-ssl.conf'
    to point to your SSL certificate. Then restart apache:

      service apache2 restart

    The SSL key file should only be readable by root; the certificate file may be
    globally readable. These files are read by the Apache parent process which runs
    as root, and it is therefore not necessary to make the files readable by the
    www-data user.

    Creating self-signed certificates
    ---------------------------------

    If you install the ssl-cert package, a self-signed certificate will be
    automatically created using the hostname currently configured on your computer.
    You can recreate that certificate (e.g. after you have changed '/etc/hosts' or
    DNS to give the correct hostname) as user root with:

      make-ssl-cert generate-default-snakeoil --force-overwrite

    To create more certificates with different host names, you can use

      make-ssl-cert /usr/share/ssl-cert/ssleay.cnf /path/to/cert-file.crt

    This will ask you for the hostname and place both SSL key and certificate in
    the file '/path/to/cert-file.crt'. Use this file with the SSLCertificateFile
    directive in the Apache config (you don't need the SSLCertificateKeyFile in
    this case as it also contains the key). The file '/path/to/cert-file.crt'
    should only be readable by root. A good directory to use for the additional
    certificates/keys is '/etc/ssl/private'.

    SSL workaround for MSIE
    -----------------------

    The SSL workaround for MS Internet Explorer needs to be added to your SSL
    VirtualHost section (it was previously in ssl.conf but caused keepalive to be
    disabled even for non-SSL connections):

      BrowserMatch "MSIE [2-6]" \
        nokeepalive ssl-unclean-shutdown \
        downgrade-1.0 force-response-1.0
      BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown

    The default SSL virtual host in '/etc/apache2/sites-available/default-ssl.conf'
    already contains this workaround.


    Suexec
    ======

    Debian ships two version of the suexec helper program required by
    mod_suexec. It is not installed by default, to avoid possible security
    issues. The package apache2-suexec-pristine contains the standard version
    that works only with document root /var/www, userdir suffix public_html,
    and Apache run user www-data. The package apache2-suexec-custom contains a
    customizable version that can be configured with a config file to use
    different settings (like /srv/www as document root). For more information
    see the suexec(8) man page in the apache2-suexec-custom package.

    Since apache2-suexec-custom has received less testing and might be slightly
    slower, apache2-suexec is the recommended version unless you need the features
    from apache2-suexec-custom.

    Starting with Apache 2.4 both alternatives can be installed at the same
    time and the default suexec mechanism can be picked by using the
    update-alternatives(8) system.


    Unicode File Name Normalization
    ===============================

    Using Apache with the document root on a file system that does unicode
    normalization on the filenames can cause security issues. In Debian,
    this affects ZFS with the non-default option to enable filename normalization,
    and HFS+. It is strongly recommended not to use Apache with such file systems.
    More information about this issue can be found by searching the web for
    CVE-2013-0966.


    Documentation
    =============

    The full Apache 2 documentation can be found on the web at

    http://httpd.apache.org/docs/2.4/

    or, if you have installed the apache2-doc package, in

    /usr/share/doc/apache2-doc/manual/

    or at

    http://localhost/manual/

    There is also a wiki that contains useful information:

    http://wiki.apache.org/httpd/

    Some hints about securing Apache 2 on Debian are available at

    http://wiki.debian.org/Apache/Hardening


    Upgrades
    ========

    Changes in the Apache packages that require manual configuration adjustments
    are announced in NEWS.Debian. Installing the apt-listchanges package is
    recommended. It will display the relevant NEWS.Debian sections before
    upgrades.


    Multiple instances
    ==================

    There is some support for running multiple instances of Apache2 on the same
    machine. See '/usr/share/doc/apache2/README.multiple-instances' for more
    information.


    Common Problems
    ===============

    1) Error message "Could not reliably determine the server's fully qualified 
    domain name, using 127.0.0.1 for ServerName" during start

    This can usually be ignored but it means that Apache httpd was unable to obtain
    a fully-qualified hostname by doing a reverse lookup on your server's IP
    address. You may want to add the fully-qualified hostname to '/etc/hosts'.
    An alternative is to specify "ServerName 127.0.0.1" in the global server
    context of the configuration, e.g. in
    '/etc/apache2/conf-enabled/local-servername.conf'.

    2) Error message "mod_rewrite: could not create rewrite_log_lock"

    This probably means that there are some stale SYSV semaphores around. This
    usually happens after apache2 has been killed with kill -9 (SIGKILL). You can
    clean up the semaphores with:

      ipcs -s | grep www-data | awk ' { print $2 } ' | xargs ipcrm sem

    3) Message "File does not exist: /etc/apache2/htdocs" in error log

    In most cases this means that no matching VirtualHost definition could be
    found for an incoming request. Check that the target IP address/port and the
    name in the Host: header of the request actually match one of the virtual
    hosts.

    4) Message "Couldn't create pollset in child; check user or system limits" in
    error log

    On Linux kernels since 2.6.27.8, the value in

      /proc/sys/fs/epoll/max_user_instances

    needs to be larger than

      for prefork/itk  MPM: 2 * MaxClients
      for worker/event MPM: MaxClients + MaxClients/ThreadsPerChild

    It can be set on boot by adding a line like

      fs.epoll.max_user_instances=1024

    to '/etc/sysctl.conf'.

    There are several other error messages related to creating a pollset that can
    appear for the same reason.

    On the other hand, errors about adding to a pollset are related to the setting
    fs.epoll.max_user_watches. On most systems, max_user_watches should be high
    enough by default.

    5) Message "Server should be SSL-aware but has no certificate configured" in
    error log

    Since 2.2.12, Apache is stricter about certain misconfigurations concerning
    name based SSL virtual hosts. See NEWS.Debian.gz for more details.

    6) Apache does not pass Authorization header to CGI scripts

    This is intentional to avoid security holes. If you really want to change it,
    you can use mod_rewrite:

      RewriteCond %{HTTP:Authorization} (.*)
      RewriteRule . - [env=HTTP_AUTHORIZATION:%1]

    7) mod_dav is behaving strangely

    In general, if you use mod_dav_fs, you need to disable multiviews and script
    execution for that directory. For example:

      <Directory /var/www/dav>
        Dav on
        Options -MultiViews -ExecCGI
        SetHandler none
        <IfModule mod_php5.c>
          php_admin_value engine Off
        </IfModule>
      </Directory>

    8) Message "apache2: bad user name ${APACHE_RUN_USER}" when starting apache2
    directly

    Use apache2ctl (it accepts all the same options as apache2).

    9) A PUT with mod_dav_fs fails with "Unable to PUT new contents for /...
    [403, #0]" even if Apache has permission to write the file.

    Apache also needs write permission to the directory containing the file, in
    order to replace it atomically.

    10) When starting/reloading Apache, there is the error message
    "ulimit: open files: cannot modify limit: Operation not permitted"

    If you are running Apache in a vserver environment, the start script may not
    be allowed to set the maximum number of open files. You should adjust
    APACHE_ULIMIT_MAX_FILES in /etc/apache2/envvars to your setup. You can
    disable changing the limits by setting APACHE_ULIMIT_MAX_FILES=true .


    For Developers
    ==============

    The Apache 2 web server package provides several helpers to assist
    packagers to interact with the web server for both, build and installation
    time. Please refer to the PACKAGING file in the apache2 package for
    detailed information.
    
    
# ┌──(nashtech㉿kalihost1)-[/etc/ssl/certs]
└─$ cd /etc/ssl/certs/    
    ┌──(nashtech㉿kalihost1)-[/etc/ssl/certs]
└─$ ls -lah    
total 632K
drwxr-xr-x. 3 root root  20K Apr 20 14:33  .
drwxr-xr-x. 4 root root 4.0K Apr 20 14:29  ..
lrwxrwxrwx. 1 root root   23 Mar  5 05:03  002c0b4f.0 -> GlobalSign_Root_R46.pem
lrwxrwxrwx. 1 root root   45 Mar  5 05:03  02265526.0 -> Entrust_Root_Certification_Authority_-_G2.pem
lrwxrwxrwx. 1 root root   27 Mar  5 05:03  062cdee6.0 -> GlobalSign_Root_CA_-_R3.pem
lrwxrwxrwx. 1 root root   25 Mar  5 05:03  064e0aa9.0 -> QuoVadis_Root_CA_2_G3.pem
lrwxrwxrwx. 1 root root   50 Mar  5 05:03  06dc52d5.0 -> SSL.com_EV_Root_Certification_Authority_RSA_R2.pem
lrwxrwxrwx. 1 root root   34 Apr 20 14:29  08063a00.0 -> Security_Communication_RootCA3.pem
lrwxrwxrwx. 1 root root   54 Mar  5 05:03  09789157.0 -> Starfield_Services_Root_Certificate_Authority_-_G2.pem
lrwxrwxrwx. 1 root root   15 Mar  5 05:03  0a775a30.0 -> GTS_Root_R3.pem
lrwxrwxrwx. 1 root root   16 Mar  5 05:03  0b1b94ef.0 -> CFCA_EV_ROOT.pem
lrwxrwxrwx. 1 root root   16 Apr 20 14:29  0b9bc432.0 -> ISRG_Root_X2.pem
lrwxrwxrwx. 1 root root   44 Mar  5 05:03  0bf05006.0 -> SSL.com_Root_Certification_Authority_ECC.pem
lrwxrwxrwx. 1 root root   32 Mar  5 05:03  0f5dc4f3.0 -> UCA_Extended_Validation_Root.pem
lrwxrwxrwx. 1 root root   26 Mar  5 05:03  0f6fa695.0 -> GDCA_TrustAUTH_R5_ROOT.pem
lrwxrwxrwx. 1 root root   15 Mar  5 05:03  1001acf7.0 -> GTS_Root_R1.pem
lrwxrwxrwx. 1 root root   46 Mar  5 05:03  106f3e4d.0 -> Entrust_Root_Certification_Authority_-_EC1.pem
lrwxrwxrwx. 1 root root   27 Mar  5 05:03  14bc7599.0 -> emSign_ECC_Root_CA_-_G3.pem
lrwxrwxrwx. 1 root root   23 Mar  5 05:03  18856ac4.0 -> SecureSign_RootCA11.pem
lrwxrwxrwx. 1 root root   31 Mar  5 05:03  1d3472b9.0 -> GlobalSign_ECC_Root_CA_-_R5.pem
lrwxrwxrwx. 1 root root   37 Mar  5 05:03  1e08bfd1.0 -> IdenTrust_Public_Sector_Root_CA_1.pem
lrwxrwxrwx. 1 root root   32 Mar  5 05:03  1e09d511.0 -> T-TeleSec_GlobalRoot_Class_2.pem
lrwxrwxrwx. 1 root root   38 Mar  5 05:03  244b5494.0 -> DigiCert_High_Assurance_EV_Root_CA.pem
lrwxrwxrwx. 1 root root   23 Mar  5 05:03  2923b3f9.0 -> emSign_Root_CA_-_G1.pem
lrwxrwxrwx. 1 root root   20 Mar  5 05:03  2ae6433e.0 -> CA_Disig_Root_R2.pem
lrwxrwxrwx. 1 root root   26 Mar  5 05:03  2b349938.0 -> AffirmTrust_Commercial.pem
lrwxrwxrwx. 1 root root   59 Mar  5 05:03  32888f65.0 -> Hellenic_Academic_and_Research_Institutions_RootCA_2015.pem
lrwxrwxrwx. 1 root root   27 Mar  5 05:03  3513523f.0 -> DigiCert_Global_Root_CA.pem
lrwxrwxrwx. 1 root root   61 Mar  5 05:03  3bde41ac.0 -> Autoridad_de_Certificacion_Firmaprofesional_CIF_A62634068.pem
lrwxrwxrwx. 1 root root   63 Apr 20 14:29  3bde41ac.1 -> Autoridad_de_Certificacion_Firmaprofesional_CIF_A62634068_2.pem

    
